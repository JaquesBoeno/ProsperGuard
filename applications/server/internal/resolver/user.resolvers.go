package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"

	"github.com/JaquesBoeno/ProsperGuard/server/internal/controller"
	"github.com/JaquesBoeno/ProsperGuard/server/internal/graph"
	"github.com/JaquesBoeno/ProsperGuard/server/internal/graph/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.CreateNewUser) (*model.User, error) {
	userController := controller.DIUsers{
		DBClient: r.DbClient,
	}

	user, err := userController.CreateUser(input.Name, input.Email, input.Password)

	return user, err
	// panic(fmt.Errorf("not implemented: Users - users"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	userController := controller.DIUsers{
		DBClient: r.DbClient,
	}

	users, err := userController.GetAllUser()

	return users, err
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
